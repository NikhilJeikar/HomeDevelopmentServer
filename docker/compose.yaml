version: "3.7"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    container_name: DB
    environment:
      node.name: es01
      cluster.name: $CLUSTER_NAME
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      xpack.security.enabled: $ELASTIC_SECURITY
    volumes:
      - ./data:/usr/share/elasticsearch/data:rw
      - ./certs:/usr/share/elasticsearch/config/certs:rw
    ports:
      - "9200:9200"
    networks:
      network:
        ipv4_address: 10.0.0.2
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3

  server:
    container_name: Backend
    build: backend/.
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    depends_on:
      - elasticsearch
    ports:
      - "8000:8000"
    volumes:
      - ../.:/server:rw
    networks:
      network:
        ipv4_address: 10.0.0.3
    command: bash /trigger.sh elasticsearch 9200 python3.8 main.py

  face_detetction:
    container_name: FaceDetection
    build: backend/.
    restart: on-failure
    deploy:
        resources:
            limits:
              cpus: '0.75'
              memory: 1024M
            reservations:
              cpus: '0.25'
              memory: 512M
    depends_on:
      server:
        condition: service_started
    volumes:
      - ../.:/server:rw
    networks:
      network:
        ipv4_address: 10.0.0.5
    command: bash /trigger.sh server 8000 python3.8 main_watcher.py

  nginx:
    container_name: Frontend
    image: nginx
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
      - "80:80"
    volumes:
      - ../ui/build:/usr/share/nginx/html:rw
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:rw
    networks:
      network:
        ipv4_address: 10.0.0.4

networks:
  network:
    driver: bridge
    name: connection_bridge
    ipam:
      config:
        - subnet: 10.0.0.0/16
          gateway: 10.0.0.1
